import sys
sys.stdin = open('input.txt')


# thought process: 현재 24분 11초

# 어떤 문제를 풀어야 하는가?
#  => 숫자를 크게 바꾸어야 한다

# 어떤 논리로 풀어야 하는가?
#  => 순열, 부분집합

# 문제의 제약 사항들:
# 1. 큰 숫자들을 왼쪽으로 최대한 보내야 한다
# 2. 반드시 주어진 횟수만큼 교환이 이루어져야 한다.
# 3. 동일한 위치에 교환이 중복되어도 상관 없다.
# 4. 스왑 횟수당, 매번 새로운 숫자 두개의 위치를 바꿀 수 있다.

# 그리디 알고리즘 생각 정리:
# 먼저 부분 문제의 최적해를 구하고, 이를 부분해 집합에 추가
# 새로운 부분 해 집합의 실행가능 여부, 제약조건 미위반 여부 확인,
# 새로운 부분 해 집합이 문제의 해가 되는지를 확인,
# 아직 전체 문제의 해가 미완성이라면 가장 처음 프로세스부터 다시 시작

# 정리 생각을 문제에 적용:
# 가장 큰 원소 카드 하나 선택.
# 인덱싱으로 작은 숫자들 순으로 스왑을 해 나가는데,
# # 스왑이 하나 남아있을때 스왑으로 인해 전체 크기가 현재 전체 크기 보다 낮아진다면 실행 x
# # 만약 더이상 바꿀게 없는데 스왑 횟수가 남아있다면, 같은 숫자를 찾아 스왑
# # 같은 숫자가 없다면, 일단은 스왑