"""
연습문제 4. 순열

4-2) 재귀로 순열 생성하기
[1, 2, 3]을 포함하는 모든 순열을 재귀 함수를 활용하여 구현하시오.

** 각 자리를 어떻게 확정 시킬 것인가에 초점을 맞춰 구현해보세요.
** swap하는 방식과 방문 처리를 하는 방식으로 모두 구현해보세요.
"""

#0. 순열이 생성되는 과정 그려보기
# 순열이 생성되는 과정을 반드시 먼저 손으로 그려보고 코드 작성

#1. swap
def perm_swap(n, t):
    if t == n:
        print(nums)
    else:
        for i in range(t, n):
            nums[t], nums[i] = nums[i], nums[t]
            perm_swap(n, t+1)
            nums[t], nums[i] = nums[i], nums[t]


nums = [1, 2, 3]
perm_swap(3, 0)


"""
1 2 3
1 3 2
2 1 3
2 3 1
3 2 1
3 1 2
"""

##########################################################################################
"""
연습문제 4. 순열

4-3) 5개의 숫자 중 3자리의 순열 생성하기
[1, 2, 3, 4, 5]에서 3자리의 순열을 재귀 함수를 활용하여 구현하시오.
"""

def perm(t, n, m): 		# t: 숫자를 결정 할 자리 인덱스, n: 순열의 길이, m: 주어진 숫자의 개수
    if t == n:      # 순열 하나가 완성되면
        print(ans)  # 해당 순열 출력
    else:
        for i in range(len(nums)):
            if not visited[i]:
                visited[i] = 1
                ans[t] = nums[i]
                perm(t+1, n, m)
                visited[i] = 0


nums = [1, 2, 3, 4, 5]
ans = [0] * 3
visited = [0] * 5
perm(0, len(ans), len(nums))

"""
1 2 3 
1 2 4 
1 2 5 
1 3 2 
1 3 4 
1 3 5 
1 4 3 
1 4 2 
1 4 5 
1 5 3 
1 5 4 
1 5 2 
2 1 3 
2 1 4 
2 1 5 
2 3 1 
2 3 4 
... 생략
"""