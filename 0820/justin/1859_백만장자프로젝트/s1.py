import sys
sys.stdin = open('input.txt')
T = int(input())
for tc in range(1, T+1):
    N = int(input())
    sales = list(map(int, input().split()))
    ans = 0
    max_val = sales[N-1]                # 혹은 sales[-1]
    for i in range(N-2, -1, -1):        # 최댓값으로 둔 마지막 날 전날부터 시작하여 최댓값을 갱신
        if max_val > sales[i]:          # 최댓값보다 작은 경우
            ans += max_val - sales[i]   # 차액 만큼 이익을 남길 수 있음
        else:                           # 최댓값보다 큰 경우
            max_val = sales[i]          # 팔아도 이익이 없기 때문에 max_val 갱신
    print('#{} {}'.format(tc, ans))


"""
순이익 = 0 < 매매가 - 매수가
최대순이익 = 최대매매가 - 매수가
 - 사고 / 파는 시점을 잡는 것이 주요 포인트
 - 물건의 가격이 최대일 때 사면 그 날보다 물건이 비싼 날이 없기 때문에 팔아도 이익을 낼 수 없음 
 - 가장 마지막 날부터 돌아오면서 최댓값을 갱신해가며 차액만큼 더해가자

ex) 
10 7 6
첫 날에 사면 최대 가격에 물건을 사게 되므로 이익을 낼 수 없음
두 번째 날에 사도 세번째 날에 이 날보다 더 싸게 살 수 있기 때문에 손해 
즉, 안사는게 답

3 5 9 
첫 날에 사서 두 번째 날에 2 만큼의 차익을 얻을 수 있다. 하지만 세 번째 날에 팔면 6만큼의 차익을 얻는다.
두 번째 날에 사서 세 번째 날에 팔면 4만큼의 차익을 얻는다. 즉, 10만큼의 최대 차익을 얻는다.

앞에서부터 읽어오면 어떤 날에 팔아야 하는지 파악하기가 쉽지 않다. 
하지만 뒤에서부터 보면(마지막 날부터) 최댓값을 찾아 그보다 작은 경우의 차액을 쉽게 구할 수 있다.
"""